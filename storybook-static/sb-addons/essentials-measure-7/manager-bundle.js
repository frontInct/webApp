try {
  ;(() => {
    var t = __REACT__,
      {
        Children: O,
        Component: B,
        Fragment: R,
        Profiler: P,
        PureComponent: f,
        StrictMode: D,
        Suspense: L,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: E,
        cloneElement: v,
        createContext: U,
        createElement: M,
        createFactory: x,
        createRef: H,
        forwardRef: F,
        isValidElement: N,
        lazy: G,
        memo: W,
        startTransition: K,
        unstable_act: Y,
        useCallback: d,
        useContext: V,
        useDebugValue: q,
        useDeferredValue: z,
        useEffect: u,
        useId: Z,
        useImperativeHandle: J,
        useInsertionEffect: Q,
        useLayoutEffect: X,
        useMemo: $,
        useReducer: j,
        useRef: oo,
        useState: eo,
        useSyncExternalStore: no,
        useTransition: co,
        version: to,
      } = __REACT__
    var so = __STORYBOOK_API__,
      {
        ActiveTabs: io,
        Consumer: uo,
        ManagerContext: po,
        Provider: mo,
        RequestResponseError: So,
        addons: l,
        combineParameters: _o,
        controlOrMetaKey: bo,
        controlOrMetaSymbol: Co,
        eventMatchesShortcut: ho,
        eventToShortcut: Ao,
        experimental_MockUniversalStore: yo,
        experimental_UniversalStore: To,
        experimental_requestResponse: go,
        experimental_useUniversalStore: wo,
        isMacLike: ko,
        isShortcutTaken: Oo,
        keyToSymbol: Bo,
        merge: Ro,
        mockChannel: Po,
        optionOrAltSymbol: fo,
        shortcutMatchesShortcut: Do,
        shortcutToHumanString: Lo,
        types: p,
        useAddonState: Eo,
        useArgTypes: vo,
        useArgs: Uo,
        useChannel: Mo,
        useGlobalTypes: xo,
        useGlobals: m,
        useParameter: Ho,
        useSharedState: Fo,
        useStoryPrepared: No,
        useStorybookApi: S,
        useStorybookState: Go,
      } = __STORYBOOK_API__
    var qo = __STORYBOOK_COMPONENTS__,
      {
        A: zo,
        ActionBar: Zo,
        AddonPanel: Jo,
        Badge: Qo,
        Bar: Xo,
        Blockquote: $o,
        Button: jo,
        ClipboardCode: oe,
        Code: ee,
        DL: ne,
        Div: ce,
        DocumentWrapper: te,
        EmptyTabContent: re,
        ErrorFormatter: Ie,
        FlexBar: ae,
        Form: le,
        H1: se,
        H2: ie,
        H3: de,
        H4: ue,
        H5: pe,
        H6: me,
        HR: Se,
        IconButton: _,
        IconButtonSkeleton: _e,
        Icons: be,
        Img: Ce,
        LI: he,
        Link: Ae,
        ListItem: ye,
        Loader: Te,
        Modal: ge,
        OL: we,
        P: ke,
        Placeholder: Oe,
        Pre: Be,
        ProgressSpinner: Re,
        ResetWrapper: Pe,
        ScrollArea: fe,
        Separator: De,
        Spaced: Le,
        Span: Ee,
        StorybookIcon: ve,
        StorybookLogo: Ue,
        Symbols: Me,
        SyntaxHighlighter: xe,
        TT: He,
        TabBar: Fe,
        TabButton: Ne,
        TabWrapper: Ge,
        Table: We,
        Tabs: Ke,
        TabsState: Ye,
        TooltipLinkList: Ve,
        TooltipMessage: qe,
        TooltipNote: ze,
        UL: Ze,
        WithTooltip: Je,
        WithTooltipPure: Qe,
        Zoom: Xe,
        codeCommon: $e,
        components: je,
        createCopyToClipboardFunction: on,
        getStoryHref: en,
        icons: nn,
        interleaveSeparators: cn,
        nameSpaceClassNames: tn,
        resetComponents: rn,
        withReset: In,
      } = __STORYBOOK_COMPONENTS__
    var un = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: pn,
        AccessibilityIcon: mn,
        AccessibilityIgnoredIcon: Sn,
        AddIcon: _n,
        AdminIcon: bn,
        AlertAltIcon: Cn,
        AlertIcon: hn,
        AlignLeftIcon: An,
        AlignRightIcon: yn,
        AppleIcon: Tn,
        ArrowBottomLeftIcon: gn,
        ArrowBottomRightIcon: wn,
        ArrowDownIcon: kn,
        ArrowLeftIcon: On,
        ArrowRightIcon: Bn,
        ArrowSolidDownIcon: Rn,
        ArrowSolidLeftIcon: Pn,
        ArrowSolidRightIcon: fn,
        ArrowSolidUpIcon: Dn,
        ArrowTopLeftIcon: Ln,
        ArrowTopRightIcon: En,
        ArrowUpIcon: vn,
        AzureDevOpsIcon: Un,
        BackIcon: Mn,
        BasketIcon: xn,
        BatchAcceptIcon: Hn,
        BatchDenyIcon: Fn,
        BeakerIcon: Nn,
        BellIcon: Gn,
        BitbucketIcon: Wn,
        BoldIcon: Kn,
        BookIcon: Yn,
        BookmarkHollowIcon: Vn,
        BookmarkIcon: qn,
        BottomBarIcon: zn,
        BottomBarToggleIcon: Zn,
        BoxIcon: Jn,
        BranchIcon: Qn,
        BrowserIcon: Xn,
        ButtonIcon: $n,
        CPUIcon: jn,
        CalendarIcon: oc,
        CameraIcon: ec,
        CameraStabilizeIcon: nc,
        CategoryIcon: cc,
        CertificateIcon: tc,
        ChangedIcon: rc,
        ChatIcon: Ic,
        CheckIcon: ac,
        ChevronDownIcon: lc,
        ChevronLeftIcon: sc,
        ChevronRightIcon: ic,
        ChevronSmallDownIcon: dc,
        ChevronSmallLeftIcon: uc,
        ChevronSmallRightIcon: pc,
        ChevronSmallUpIcon: mc,
        ChevronUpIcon: Sc,
        ChromaticIcon: _c,
        ChromeIcon: bc,
        CircleHollowIcon: Cc,
        CircleIcon: hc,
        ClearIcon: Ac,
        CloseAltIcon: yc,
        CloseIcon: Tc,
        CloudHollowIcon: gc,
        CloudIcon: wc,
        CogIcon: kc,
        CollapseIcon: Oc,
        CommandIcon: Bc,
        CommentAddIcon: Rc,
        CommentIcon: Pc,
        CommentsIcon: fc,
        CommitIcon: Dc,
        CompassIcon: Lc,
        ComponentDrivenIcon: Ec,
        ComponentIcon: vc,
        ContrastIcon: Uc,
        ContrastIgnoredIcon: Mc,
        ControlsIcon: xc,
        CopyIcon: Hc,
        CreditIcon: Fc,
        CrossIcon: Nc,
        DashboardIcon: Gc,
        DatabaseIcon: Wc,
        DeleteIcon: Kc,
        DiamondIcon: Yc,
        DirectionIcon: Vc,
        DiscordIcon: qc,
        DocChartIcon: zc,
        DocListIcon: Zc,
        DocumentIcon: Jc,
        DownloadIcon: Qc,
        DragIcon: Xc,
        EditIcon: $c,
        EllipsisIcon: jc,
        EmailIcon: ot,
        ExpandAltIcon: et,
        ExpandIcon: nt,
        EyeCloseIcon: ct,
        EyeIcon: tt,
        FaceHappyIcon: rt,
        FaceNeutralIcon: It,
        FaceSadIcon: at,
        FacebookIcon: lt,
        FailedIcon: st,
        FastForwardIcon: it,
        FigmaIcon: dt,
        FilterIcon: ut,
        FlagIcon: pt,
        FolderIcon: mt,
        FormIcon: St,
        GDriveIcon: _t,
        GithubIcon: bt,
        GitlabIcon: Ct,
        GlobeIcon: ht,
        GoogleIcon: At,
        GraphBarIcon: yt,
        GraphLineIcon: Tt,
        GraphqlIcon: gt,
        GridAltIcon: wt,
        GridIcon: kt,
        GrowIcon: Ot,
        HeartHollowIcon: Bt,
        HeartIcon: Rt,
        HomeIcon: Pt,
        HourglassIcon: ft,
        InfoIcon: Dt,
        ItalicIcon: Lt,
        JumpToIcon: Et,
        KeyIcon: vt,
        LightningIcon: Ut,
        LightningOffIcon: Mt,
        LinkBrokenIcon: xt,
        LinkIcon: Ht,
        LinkedinIcon: Ft,
        LinuxIcon: Nt,
        ListOrderedIcon: Gt,
        ListUnorderedIcon: Wt,
        LocationIcon: Kt,
        LockIcon: Yt,
        MarkdownIcon: Vt,
        MarkupIcon: qt,
        MediumIcon: zt,
        MemoryIcon: Zt,
        MenuIcon: Jt,
        MergeIcon: Qt,
        MirrorIcon: Xt,
        MobileIcon: $t,
        MoonIcon: jt,
        NutIcon: or,
        OutboxIcon: er,
        OutlineIcon: nr,
        PaintBrushIcon: cr,
        PaperClipIcon: tr,
        ParagraphIcon: rr,
        PassedIcon: Ir,
        PhoneIcon: ar,
        PhotoDragIcon: lr,
        PhotoIcon: sr,
        PhotoStabilizeIcon: ir,
        PinAltIcon: dr,
        PinIcon: ur,
        PlayAllHollowIcon: pr,
        PlayBackIcon: mr,
        PlayHollowIcon: Sr,
        PlayIcon: _r,
        PlayNextIcon: br,
        PlusIcon: Cr,
        PointerDefaultIcon: hr,
        PointerHandIcon: Ar,
        PowerIcon: yr,
        PrintIcon: Tr,
        ProceedIcon: gr,
        ProfileIcon: wr,
        PullRequestIcon: kr,
        QuestionIcon: Or,
        RSSIcon: Br,
        RedirectIcon: Rr,
        ReduxIcon: Pr,
        RefreshIcon: fr,
        ReplyIcon: Dr,
        RepoIcon: Lr,
        RequestChangeIcon: Er,
        RewindIcon: vr,
        RulerIcon: b,
        SaveIcon: Ur,
        SearchIcon: Mr,
        ShareAltIcon: xr,
        ShareIcon: Hr,
        ShieldIcon: Fr,
        SideBySideIcon: Nr,
        SidebarAltIcon: Gr,
        SidebarAltToggleIcon: Wr,
        SidebarIcon: Kr,
        SidebarToggleIcon: Yr,
        SpeakerIcon: Vr,
        StackedIcon: qr,
        StarHollowIcon: zr,
        StarIcon: Zr,
        StatusFailIcon: Jr,
        StatusIcon: Qr,
        StatusPassIcon: Xr,
        StatusWarnIcon: $r,
        StickerIcon: jr,
        StopAltHollowIcon: oI,
        StopAltIcon: eI,
        StopIcon: nI,
        StorybookIcon: cI,
        StructureIcon: tI,
        SubtractIcon: rI,
        SunIcon: II,
        SupportIcon: aI,
        SweepIcon: lI,
        SwitchAltIcon: sI,
        SyncIcon: iI,
        TabletIcon: dI,
        ThumbsUpIcon: uI,
        TimeIcon: pI,
        TimerIcon: mI,
        TransferIcon: SI,
        TrashIcon: _I,
        TwitterIcon: bI,
        TypeIcon: CI,
        UbuntuIcon: hI,
        UndoIcon: AI,
        UnfoldIcon: yI,
        UnlockIcon: TI,
        UnpinIcon: gI,
        UploadIcon: wI,
        UserAddIcon: kI,
        UserAltIcon: OI,
        UserIcon: BI,
        UsersIcon: RI,
        VSCodeIcon: PI,
        VerifiedIcon: fI,
        VideoIcon: DI,
        WandIcon: LI,
        WatchIcon: EI,
        WindowsIcon: vI,
        WrenchIcon: UI,
        XIcon: MI,
        YoutubeIcon: xI,
        ZoomIcon: HI,
        ZoomOutIcon: FI,
        ZoomResetIcon: NI,
        iconList: GI,
      } = __STORYBOOK_ICONS__
    var s = 'storybook/measure-addon',
      C = `${s}/tool`,
      h = () => {
        let [r, c] = m(),
          { measureEnabled: I } = r,
          i = S(),
          a = d(() => c({ measureEnabled: !I }), [c, I])
        return (
          u(() => {
            i.setAddonShortcut(s, {
              label: 'Toggle Measure [M]',
              defaultShortcut: ['M'],
              actionName: 'measure',
              showInMenu: !1,
              action: a,
            })
          }, [a, i]),
          t.createElement(
            _,
            { key: C, active: I, title: 'Enable measure', onClick: a },
            t.createElement(b, null)
          )
        )
      }
    l.register(s, () => {
      l.add(C, {
        type: p.TOOL,
        title: 'Measure',
        match: ({ viewMode: r, tabId: c }) => r === 'story' && !c,
        render: () => t.createElement(h, null),
      })
    })
  })()
} catch (e) {
  console.error('[Storybook] One of your manager-entries failed: ' + import.meta.url, e)
}
